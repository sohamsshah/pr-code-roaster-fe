name: Check Console Logs

on:
  pull_request:
    types: [labeled]

jobs:
  check-logs:
    if: github.event.label.name == 'log checker'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Find and comment on console.logs
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            
            // Get the base and head SHAs
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            // Get the list of changed files in the PR
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            // Filter for relevant file types (js, jsx, ts, tsx)
            const relevantFiles = files.filter(file => 
              /\.(js|jsx|ts|tsx)$/.test(file.filename)
            );
            
            for (const file of relevantFiles) {
              try {
                // Get the file content at the PR head
                const fileContent = execSync(`git show ${pr.head.sha}:${file.filename}`, { encoding: 'utf-8' });
                const fileLines = fileContent.split('\n');
                
                // Find all lines containing console.log
                const consoleLogLines = fileLines.reduce((acc, line, index) => {
                  if (line.includes('console.log')) {
                    acc.push({
                      lineNumber: index + 1,  // Convert to 1-based line number
                      content: line.trim()
                    });
                  }
                  return acc;
                }, []);
                
                // Create review comments for each found instance
                for (const { lineNumber, content } of consoleLogLines) {
                  await github.rest.pulls.createReviewComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: context.issue.number,
                    body: `⚠️ Found console.log statement:\n\`\`\`javascript\n${content}\n\`\`\`\nConsider removing or replacing with proper logging mechanism.`,
                    commit_id: pr.head.sha,
                    path: file.filename,
                    line: lineNumber,
                    side: 'RIGHT'
                  });
                }
              } catch (error) {
                console.error(`Error processing ${file.filename}:`, error);
              }
            }
